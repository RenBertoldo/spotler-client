[
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/order",
        "apis": [
            {
                "path": "/order",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add an order",
                        "notes": "Adds an order to MailPlus.",
                        "type": "void",
                        "nickname": "insertOrder",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "OrderRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Order created successfully"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Product not found</li><li>Contact not found</li><li>Order is empty</li><li>Date is empty</li><li>No product list</li><li>Productlist is empty</li><li>Product id is empty</li><li>OrderId is empty</li><li>ExternalContactId id empty</li><li>Illegal order value</li><li>Illegal order date</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/order/{externalOrderId}",
                "operations": [
                    {
                        "method": "PUT",
                        "summary": "Update an order",
                        "notes": "Updates an existing order.",
                        "type": "void",
                        "nickname": "updateOrder",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalOrderId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "OrderRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Order updated successfully"
                            },
                            {
                                "code": 404,
                                "message": "Order not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Product not found</li><li>Contact not found</li><li>Order is empty</li><li>Date is empty</li><li>No product list</li><li>Productlist is empty</li><li>Product id is empty</li><li>OrderId is empty</li><li>ExternalContactId id empty</li><li>Illegal order value</li><li>Illegal order date</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "DELETE",
                        "summary": "Delete an order",
                        "notes": "Deletes an existing order.",
                        "type": "void",
                        "nickname": "deleteOrder",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalOrderId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Order deleted successfully"
                            },
                            {
                                "code": 404,
                                "message": "Order not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "OrderRequest": {
                "id": "OrderRequest",
                "required": [
                    "order"
                ],
                "properties": {
                    "order": {
                        "$ref": "Order"
                    },
                    "update": {
                        "type": "boolean",
                        "description": "Only existing orders can be updated - Default value: false"
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Order": {
                "id": "Order",
                "required": [
                    "externalId",
                    "externalContactId",
                    "date",
                    "value",
                    "externalProductIds"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Specified order reference by external system"
                    },
                    "externalContactId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    },
                    "date": {
                        "type": "string",
                        "description": "dateFormat: ISO 8601 - Date & time the order was placed"
                    },
                    "value": {
                        "type": "string",
                        "description": "Total order value in cents"
                    },
                    "externalProductIds": {
                        "type": "array",
                        "description": "Products part of the order (Use '/product/*' to request or post additional data)",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/trend-report",
        "apis": [
            {
                "path": "/trend-report",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get a list of trend reports",
                        "notes": "Returns a list of trend reports.",
                        "type": "TrendReportResponse",
                        "nickname": "getTrendReports",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "enabled",
                                "required": false,
                                "type": "boolean",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "UUID": {
                "id": "UUID",
                "properties": {
                    "leastSignificantBits": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mostSignificantBits": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "Paging": {
                "id": "Paging",
                "properties": {
                    "next": {
                        "type": "string"
                    },
                    "after": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TrendReport": {
                "id": "TrendReport",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "target": {
                        "$ref": "TrendReportTarget",
                        "enum": [
                            "B2B",
                            "B2C",
                            "OTHER"
                        ]
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "folderId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "contentType": {
                        "$ref": "TrendReportContentType",
                        "enum": [
                            "MARKETING",
                            "INFO",
                            "SERVICE"
                        ]
                    },
                    "reportingEnabled": {
                        "type": "boolean"
                    },
                    "sendDays": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sendHours": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sendMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "reportEmail1": {
                        "type": "string"
                    },
                    "reportEmail2": {
                        "type": "string"
                    },
                    "reportEmail3": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "mailingCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "TrendReportResponse": {
                "id": "TrendReportResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "trendReports": {
                        "type": "array",
                        "items": {
                            "$ref": "TrendReport"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/campaign-mailing",
        "apis": [
            {
                "path": "/campaign-mailing/{encryptedMailingId}/recipients",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get recipients for a campaign mailing",
                        "notes": "Returns contacts to which the mailing has been sent.",
                        "type": "CampaignMailingRecipientResponse",
                        "nickname": "getMailedContacts",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign-mailing/{encryptedMailingId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get details of a campaign mailing",
                        "notes": "Returns the details of a given mailing sent by a campaign, including details of the used links.",
                        "type": "CampaignMailingDetails",
                        "nickname": "getCampaignMailingsDetails",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign-mailing/{encryptedMailingId}/bounces",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get bounces for a campaign mailing",
                        "notes": "Returns bounced contacts.",
                        "type": "CampaignMailingBounceResponse",
                        "nickname": "getBounces",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign-mailing/{encryptedMailingId}/opens",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get opens for a campaign mailing",
                        "notes": "Returns contacts who opened a given mailing. The returned contacts, downloaded the images (ORR). In order to obtain the total opens (OCR) all clicks also need to be counted as an open.",
                        "type": "CampaignMailingOpenResponse",
                        "nickname": "getCampaignMailingOpens",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign-mailing/{encryptedMailingId}/clicks",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get clicks for a campaign mailing",
                        "notes": "Returns contacts who clicked a link in a given mailing. Link details can be retrieved by using the GET method /campaign-mailing/{encryptedMailingId}.",
                        "type": "CampaignMailingClickResponse",
                        "nickname": "getClicks",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign-mailing/{encryptedMailingId}/opens/{campaignSubscriptionId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get opens for a campaign mailing for a contact",
                        "notes": "Returns open interations for a given contact in a specified mailing.",
                        "type": "MailingContactOpenResponse",
                        "nickname": "getCampaignMailingContactOpens",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "campaignSubscriptionId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid param: Contact not found</li><li>Invalid param: Mailing type invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign-mailing/{encryptedMailingId}/clicks/{campaignSubscriptionId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get clicks for a campaign mailing for a contact",
                        "notes": "Returns click interactions for a given contact in a specified mailing. Link details can be retrieved by using the GET method /campaign-mailing/{encryptedMailingId}.",
                        "type": "MailingContactClickResponse",
                        "nickname": "getCampaignMailingContactClicks",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "campaignSubscriptionId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid param: Contact not found</li><li>Invalid param: Mailing type invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "MailingContactOpenResponse": {
                "id": "MailingContactOpenResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "opens": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingContactOpen"
                        }
                    }
                }
            },
            "MailingContactClickResponse": {
                "id": "MailingContactClickResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "clicks": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingContactClick"
                        }
                    }
                }
            },
            "CampaignMailingClickResponse": {
                "id": "CampaignMailingClickResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "clicks": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignMailingClick"
                        }
                    }
                }
            },
            "MailingLink": {
                "id": "MailingLink",
                "required": [
                    "id",
                    "name",
                    "url"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "linkId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specified link name in MailPlus"
                    },
                    "url": {
                        "type": "string",
                        "description": "Link URL"
                    },
                    "code": {
                        "type": "string",
                        "description": "Specified link code in MailPlus"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "twitter",
                            "facebook",
                            "whatsapp",
                            "linkedin",
                            "openhtml",
                            "opentext",
                            "openpdf",
                            "openpdftext",
                            "unsubscribe",
                            "editprofile",
                            "webshop",
                            "conversion"
                        ]
                    }
                }
            },
            "ContactIdentifier": {
                "id": "ContactIdentifier",
                "required": [
                    "encryptedId"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    },
                    "encryptedId": {
                        "type": "string",
                        "description": "Contact reference generated by MailPlus"
                    }
                }
            },
            "MailingContactOpen": {
                "id": "MailingContactOpen",
                "required": [
                    "openDate"
                ],
                "properties": {
                    "openDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the open occurred"
                    }
                }
            },
            "CampaignMailingClick": {
                "id": "CampaignMailingClick",
                "required": [
                    "contactIdentifier",
                    "clickDate",
                    "linkId",
                    "campaignSubscriptionId"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    },
                    "clickDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the click occurred"
                    },
                    "linkId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "campaignSubscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CampaignMailingDetails": {
                "id": "CampaignMailingDetails",
                "required": [
                    "encryptedId",
                    "name",
                    "type",
                    "message"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/campaign-mailing/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Campaign mailing name"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    "message": {
                        "$ref": "Message"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingLink"
                        }
                    }
                }
            },
            "CampaignMailingOpen": {
                "id": "CampaignMailingOpen",
                "required": [
                    "campaignSubscriptionId",
                    "openDate",
                    "contactIdentifier"
                ],
                "properties": {
                    "campaignSubscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "openDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the open occurred"
                    },
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    }
                }
            },
            "CampaignMailingBounceResponse": {
                "id": "CampaignMailingBounceResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "bounces": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignMailingBounce"
                        }
                    }
                }
            },
            "CampaignMailingOpenResponse": {
                "id": "CampaignMailingOpenResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "opens": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignMailingOpen"
                        }
                    }
                }
            },
            "Paging": {
                "id": "Paging",
                "properties": {
                    "next": {
                        "type": "string"
                    },
                    "after": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ISODateParam": {
                "id": "ISODateParam",
                "properties": {
                    "date": {
                        "$ref": "date-time",
                        "description": "dateFormat: ISO 8601"
                    }
                }
            },
            "Message": {
                "id": "Message",
                "required": [
                    "name",
                    "author",
                    "fromName"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Message name"
                    },
                    "author": {
                        "type": "string",
                        "description": "Message author"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "fromName": {
                        "type": "string"
                    },
                    "fromEmail": {
                        "type": "string"
                    }
                }
            },
            "CampaignMailingBounce": {
                "id": "CampaignMailingBounce",
                "required": [
                    "contactIdentifier",
                    "bounceDate",
                    "type",
                    "campaignSubscriptionId"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    },
                    "bounceDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the bounce occured"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "HARDBOUNCE",
                            "SOFTBOUNCE"
                        ]
                    },
                    "campaignSubscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MailingContactClick": {
                "id": "MailingContactClick",
                "required": [
                    "clickDate",
                    "linkId"
                ],
                "properties": {
                    "clickDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the click occurred"
                    },
                    "linkId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CampaignMailingRecipient": {
                "id": "CampaignMailingRecipient",
                "required": [
                    "contactIdentifier",
                    "sendDate",
                    "campaignSubscriptionId"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    },
                    "sendDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the mailing has been sent"
                    },
                    "campaignSubscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "CampaignMailingRecipientResponse": {
                "id": "CampaignMailingRecipientResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignMailingRecipient"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/form",
        "apis": [
            {
                "path": "/form/{formId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get a form",
                        "notes": "Returns a HTML output of the requested form.",
                        "type": "FormResponse",
                        "nickname": "getForm",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "formId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "postUrl",
                                "required": true,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "encId",
                                "description": "Unique (MailPlus) id of a contact (when present the form is prefilled with contact fields)",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "extraParams",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "outputFormat",
                                "defaultValue": "HTML4STRICT",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false,
                                "enum": [
                                    "HTML4STRICT",
                                    "XHTML1STRICT"
                                ]
                            },
                            {
                                "name": "outputMode",
                                "defaultValue": "TABLES",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false,
                                "enum": [
                                    "TABLES",
                                    "DIV"
                                ]
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Form not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "POST",
                        "summary": "Post a form",
                        "notes": "Returns a prefilled HTML output of a requested form, based on the given parameters for a specific contact.  If a contact is present in MailPlus, existing data will be prefilled in de used contact fields. The post URL needs to refer to your own system.",
                        "type": "FormResponse",
                        "nickname": "postForm",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "formId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "FormRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Form not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/form/result/{formId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get form results",
                        "notes": "Returns submitted results of a requested form, including all given answers for every submit.",
                        "type": "array",
                        "items": {
                            "$ref": "FormResult"
                        },
                        "nickname": "getFormResults",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "formId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "completed",
                                "required": false,
                                "type": "boolean",
                                "paramType": "query",
                                "allowMultiple": false,
                                "enum": [
                                    "true"
                                ]
                            },
                            {
                                "name": "startDate",
                                "required": false,
                                "type": "DateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "endDate",
                                "required": false,
                                "type": "DateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    },
                    {
                        "method": "POST",
                        "summary": "Post a form result",
                        "notes": "Submits a form response to a MailPlus form. The post URL needs to refer to your own system.",
                        "type": "FormResponse",
                        "nickname": "submitForm",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "formId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "Params",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/form/result/{formId}/{formResultId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get form result",
                        "notes": "Returns a submitted result of a requested form for a given formResultId. A formResultId can be retrieved by using the GET method /contact/{externalId}/forms.",
                        "type": "FormResult",
                        "nickname": "getFormResult",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "formId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "formResultId",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Form or formResult not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/form/list",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get all forms",
                        "notes": "Returns a list all available forms.",
                        "type": "array",
                        "items": {
                            "$ref": "Form"
                        },
                        "nickname": "getForms",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "formSubType",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false,
                                "enum": [
                                    "normal",
                                    "subscribe",
                                    "unSubscribe",
                                    "editProfile"
                                ]
                            },
                            {
                                "name": "formState",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false,
                                "enum": [
                                    "draft",
                                    "proof",
                                    "final"
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "Form": {
                "id": "Form",
                "required": [
                    "id",
                    "name",
                    "formSubType",
                    "formState"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "formId (Use '/form/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Form name"
                    },
                    "formSubType": {
                        "type": "string",
                        "enum": [
                            "normal",
                            "subscribe",
                            "unSubscribe",
                            "editProfile"
                        ]
                    },
                    "formState": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "proof",
                            "final"
                        ]
                    }
                }
            },
            "FormRequest": {
                "id": "FormRequest",
                "required": [
                    "postUrl"
                ],
                "properties": {
                    "postUrl": {
                        "type": "string",
                        "description": "Form action URL"
                    },
                    "encId": {
                        "type": "string",
                        "description": "Form reference generated by MailPlus"
                    },
                    "extraParams": {
                        "type": "string"
                    },
                    "outputFormat": {
                        "type": "string",
                        "description": "Default value: HTML4STRICT",
                        "enum": [
                            "HTML4STRICT",
                            "XHTML1STRICT"
                        ]
                    },
                    "outputMode": {
                        "type": "string",
                        "description": "Default value: TABLES",
                        "enum": [
                            "TABLES",
                            "DIV"
                        ]
                    },
                    "prefilledValues": {
                        "$ref": "Map[string,Array[string]]",
                        "description": "Given values will be prefilled in the HTML output"
                    }
                }
            },
            "Params": {
                "id": "Params",
                "required": [
                    "postUrl",
                    "formParams"
                ],
                "properties": {
                    "postUrl": {
                        "type": "string"
                    },
                    "outputFormat": {
                        "type": "string",
                        "description": "default: HTML4STRICT",
                        "enum": [
                            "HTML4STRICT",
                            "XHTML1STRICT"
                        ]
                    },
                    "outputMode": {
                        "type": "string",
                        "description": "default: TABLES",
                        "enum": [
                            "TABLES",
                            "DIV"
                        ]
                    },
                    "formParams": {
                        "$ref": "Map[string,Array[string]]"
                    }
                }
            },
            "DateParam": {
                "id": "DateParam",
                "properties": {
                    "date": {
                        "$ref": "date-time",
                        "description": "dateformat: yyyyMMddHHmmss (time part is optional)"
                    }
                }
            },
            "FormResult": {
                "id": "FormResult",
                "required": [
                    "formResultId",
                    "submittedAt",
                    "testResult",
                    "completed"
                ],
                "properties": {
                    "formResultId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Use '/form/result*' to request additional data)"
                    },
                    "submittedAt": {
                        "$ref": "date-time",
                        "description": "Date & time the form was submitted"
                    },
                    "testResult": {
                        "type": "boolean",
                        "description": "Test results only occur when the formState is not final"
                    },
                    "answers": {
                        "type": "array",
                        "description": "All form questions and answers if available",
                        "items": {
                            "$ref": "FormElementResult"
                        }
                    },
                    "completed": {
                        "type": "boolean"
                    }
                }
            },
            "FormElementResult": {
                "id": "FormElementResult",
                "required": [
                    "rank",
                    "fieldId",
                    "description"
                ],
                "properties": {
                    "rank": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fieldId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "description": {
                        "type": "string"
                    },
                    "answer": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "FormResponse": {
                "id": "FormResponse",
                "properties": {
                    "html": {
                        "type": "string",
                        "description": "HTML form"
                    },
                    "script": {
                        "type": "string",
                        "description": "Validation scripts"
                    },
                    "isConfirmationPage": {
                        "type": "boolean",
                        "description": "Indicates whether the requested form is a confirmation page"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/mailing-interaction",
        "apis": [
            {
                "path": "/mailing-interaction/bounced",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get bounced mailing interactions",
                        "notes": "The mailings that where found.",
                        "type": "BouncedMailingInteractionResponse",
                        "nickname": "getBouncedMailingInteractions",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "trendReportIds",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing-interaction/clicked",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get clicked mailing interactions",
                        "notes": "The mailings that where found.",
                        "type": "ClickedMailingInteractionResponse",
                        "nickname": "getClickedMailingInteractions",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "trendReportIds",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing-interaction/opened",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get opened mailing interactions",
                        "notes": "The mailings that where found.",
                        "type": "ClickedMailingInteractionResponse",
                        "nickname": "getOpenedMailingInteractions",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "trendReportIds",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing-interaction/sent",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get sent mailings",
                        "notes": "The mailings that where found.",
                        "type": "SentMailingInteractionResponse",
                        "nickname": "getSentMailings",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "fromChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toChangeDate",
                                "required": false,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "trendReportIds",
                                "required": false,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "MailingInteractionBounce": {
                "id": "MailingInteractionBounce",
                "properties": {
                    "bounceType": {
                        "type": "string",
                        "enum": [
                            "HARD",
                            "SOFT"
                        ]
                    },
                    "encryptedMailingId": {
                        "type": "string"
                    },
                    "trendReportId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalContactId": {
                        "type": "string"
                    },
                    "changeDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MailingInteractionSent": {
                "id": "MailingInteractionSent",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "onlineVersionLink": {
                        "type": "string"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "encryptedMailingId": {
                        "type": "string"
                    },
                    "trendReportId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalContactId": {
                        "type": "string"
                    },
                    "changeDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "BouncedMailingInteractionResponse": {
                "id": "BouncedMailingInteractionResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "interactions": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingInteractionBounce"
                        }
                    }
                }
            },
            "SentMailingInteractionResponse": {
                "id": "SentMailingInteractionResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "interactions": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingInteractionSent"
                        }
                    }
                }
            },
            "Paging": {
                "id": "Paging",
                "properties": {
                    "next": {
                        "type": "string"
                    },
                    "after": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ClickedMailingInteractionResponse": {
                "id": "ClickedMailingInteractionResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "interactions": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingInteraction"
                        }
                    }
                }
            },
            "MailingInteraction": {
                "id": "MailingInteraction",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalContactId": {
                        "type": "string"
                    },
                    "encryptedMailingId": {
                        "type": "string"
                    },
                    "date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "changeDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "trendReportId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ISODateParam": {
                "id": "ISODateParam",
                "properties": {
                    "date": {
                        "$ref": "date-time",
                        "description": "dateFormat: ISO 8601"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/conversion",
        "apis": [
            {
                "path": "/conversion",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add a conversion interaction",
                        "notes": "Posts created-, converted and abandoned shopping carts to MailPlus as a result of click in a sent mailing. The mailplusId is added to every trackable URL, that leads to your website. This ID is unique for every mailing and contact.",
                        "type": "void",
                        "nickname": "createConversionInteraction",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "Conversion",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Conversion created successfully"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Activity not found</li><li>Link not found</li><li>Product not found</li><li>Contact not found</li><li>MailplusId wrong format</li><li>Illegal interaction type</li><li>Illegal conversion value</li><li>Illegal interaction date</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "Conversion": {
                "id": "Conversion",
                "required": [
                    "mailplusId",
                    "type",
                    "interactionDate"
                ],
                "properties": {
                    "mailplusId": {
                        "type": "string",
                        "description": "reference generated by MailPlus to add conversion details to a mailing report"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "CREATE_SHOPPINGCART",
                            " CONVERT_SHOPPINGCART"
                        ]
                    },
                    "value": {
                        "type": "string",
                        "description": "Total order value in cents"
                    },
                    "interactionDate": {
                        "type": "string",
                        "description": "dateFormat: ISO 8601 - Date & time the shopping cart was created"
                    },
                    "products": {
                        "type": "array",
                        "description": "Products part of the order/shopping cart",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/campaign",
        "apis": [
            {
                "path": "/campaign/trigger/{encryptedTriggerId}",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Trigger a campaign for a specific contact",
                        "notes": "Triggers a campaign for a given contact. The encryptedTriggerId can be retrieved by using the GET method /campaign/list.",
                        "type": "void",
                        "nickname": "triggerCampaign",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedTriggerId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "CampaignTriggerRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Campaign triggered successfully"
                            },
                            {
                                "code": 404,
                                "message": "Trigger not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Contact not found</li><li>Product not found</li><li>Campaign inactive</li><li>Campaign missing message</li><li>Contact already in campaign</li><li>Contact already active in campaign</li><li>Contact not in selection</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign/list",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get all campaigns",
                        "notes": "Returns a list of all campaigns, including external campaign triggers. Other trigger types will not be shown.",
                        "type": "array",
                        "items": {
                            "$ref": "Campaign"
                        },
                        "nickname": "externalCampaignTriggers",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": []
                    }
                ]
            },
            {
                "path": "/campaign/{encryptedCampaignId}/stop",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Stop a campaign for a specific contact",
                        "notes": "Stops a running campaign for a given contact. The encryptedCampaignId can be retrieved by using the GET method /campaign/list.",
                        "type": "void",
                        "nickname": "stopCampaign",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedCampaignId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "CampaignStopRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Campaign stopped successfully"
                            },
                            {
                                "code": 404,
                                "message": "Campaign not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Contact not found</li><li>Campaign already finished</li><li>Campaign not triggered</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/campaign/{encryptedCampaignId}/mailing",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get all mailings of a campaign",
                        "notes": "Returns all mailings being sent by a given campaign. The encryptedCampaignId can be retrieved by using the GET method /campaign/list.",
                        "type": "array",
                        "items": {
                            "$ref": "CampaignMailing"
                        },
                        "nickname": "getCampaignMailings",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedCampaignId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Campaign not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "Campaign": {
                "id": "Campaign",
                "required": [
                    "encryptedId",
                    "name",
                    "active"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedCampaignId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Campaign name"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "Campaign status"
                    },
                    "triggers": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignTrigger"
                        }
                    }
                }
            },
            "CampaignStopRequest": {
                "id": "CampaignStopRequest",
                "required": [
                    "externalContactId"
                ],
                "properties": {
                    "externalContactId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    }
                }
            },
            "CampaignTrigger": {
                "id": "CampaignTrigger",
                "required": [
                    "encryptedId",
                    "name"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedTriggerId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Trigger name"
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CampaignMailing": {
                "id": "CampaignMailing",
                "required": [
                    "encryptedId",
                    "name",
                    "type"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/campaign-mailing/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Campaign mailing name"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    }
                }
            },
            "CampaignField": {
                "id": "CampaignField",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Placeholder name used in campaign mailing"
                    },
                    "type": {
                        "type": "string",
                        "description": "Default: STRING",
                        "enum": [
                            "STRING",
                            "PRODUCTLIST",
                            "URL"
                        ]
                    },
                    "values": {
                        "type": "array",
                        "description": "Used by the productlist campaignfield to post multiple product references",
                        "items": {
                            "type": "string"
                        }
                    },
                    "value": {
                        "type": "string",
                        "description": "Used by the string campaignfield"
                    }
                }
            },
            "CampaignTriggerRequest": {
                "id": "CampaignTriggerRequest",
                "required": [
                    "externalContactId"
                ],
                "properties": {
                    "externalContactId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    },
                    "campaignFields": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignField"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/audience-contact",
        "apis": [
            {
                "path": "/audience/{externalId}/contact",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add contacts to an audience",
                        "notes": "Add contacts to an audience. Maximum batch size of contactIds: 2500",
                        "type": "void",
                        "nickname": "addContactsAudience",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "ChangeContactsAudienceRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Successfully added contacts to an audience"
                            },
                            {
                                "code": 403,
                                "message": "Only Automation or eCommerce products can use this call"
                            },
                            {
                                "code": 404,
                                "message": "Audience not found"
                            },
                            {
                                "code": 404,
                                "message": "Contacts not found",
                                "responseModel": "AudienceContactErrorResponse"
                            },
                            {
                                "code": 413,
                                "message": "Maximum batch size of contact ids exceeded(maximum is 2500)"
                            }
                        ]
                    },
                    {
                        "method": "DELETE",
                        "summary": "Removes contacts of an audience",
                        "notes": "Removes contacts of an audience. Maximum batch size of contactIds: 2500. Use a null body to remove all contacts of an audience.",
                        "type": "void",
                        "nickname": "removeContactsAudience",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": false,
                                "type": "ChangeContactsAudienceRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Successfully removed contacts of an audience"
                            },
                            {
                                "code": 403,
                                "message": "Only Automation or eCommerce products can use this call"
                            },
                            {
                                "code": 404,
                                "message": "Audience not found"
                            },
                            {
                                "code": 413,
                                "message": "Maximum batch size of contact ids exceeded(maximum is 2500)"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "AudienceContactErrorResponse": {
                "id": "AudienceContactErrorResponse",
                "required": [
                    "errorType",
                    "message",
                    "externalContactIds"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "externalContactIds": {
                        "type": "array",
                        "description": "List of externalContactId's that could not be found",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ChangeContactsAudienceRequest": {
                "id": "ChangeContactsAudienceRequest",
                "required": [
                    "contacts"
                ],
                "properties": {
                    "contacts": {
                        "type": "array",
                        "description": "List of externalContactId's",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/audience",
        "apis": [
            {
                "path": "/audience",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add an audience",
                        "notes": "Adds an audience to Spotler.",
                        "type": "Audience",
                        "nickname": "insertAudience",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "CreateAudienceRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 200,
                                "message": "Audience created successfully"
                            },
                            {
                                "code": 403,
                                "message": "Only Automation or eCommerce products can use this call"
                            },
                            {
                                "code": 417,
                                "message": "<ul><li>Audience name can not be empty or more than 255 characters</li><li>Audience name id not be empty or more than 255 characters</li><li>Audience name must be unique</li><li>Audience id must be unique</li><li>Maximum of audiences exceeded</li></ul>"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/audience/{externalId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get an audience",
                        "notes": "Returns an given audience.",
                        "type": "Audience",
                        "nickname": "getAudience",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 403,
                                "message": "Only Automation or eCommerce products can use this call"
                            },
                            {
                                "code": 404,
                                "message": "Audience not found"
                            }
                        ]
                    },
                    {
                        "method": "PUT",
                        "summary": "Update an audience",
                        "notes": "Updates an existing given audience.",
                        "type": "Audience",
                        "nickname": "updateAudience",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "Audience",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 200,
                                "message": "Audience updated successfully"
                            },
                            {
                                "code": 400,
                                "message": "Path id doesn't match audience id"
                            },
                            {
                                "code": 403,
                                "message": "Only Automation or eCommerce products can use this call"
                            },
                            {
                                "code": 404,
                                "message": "Audience not found"
                            },
                            {
                                "code": 417,
                                "message": "<ul><li>Audience name can not be empty or more than 255 characters</li><li>Audience name must be unique</li></ul>"
                            }
                        ]
                    },
                    {
                        "method": "DELETE",
                        "summary": "Delete an audience",
                        "notes": "Deletes an existing given audience.",
                        "type": "void",
                        "nickname": "deleteAudience",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Audience deleted successfully"
                            },
                            {
                                "code": 403,
                                "message": "Only Automation or eCommerce products can use this call"
                            },
                            {
                                "code": 404,
                                "message": "Audience not found"
                            },
                            {
                                "code": 417,
                                "message": "Cannot delete audience, as it's in use"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "Audience": {
                "id": "Audience",
                "required": [
                    "externalId",
                    "name"
                ],
                "properties": {
                    "createDate": {
                        "$ref": "date-time",
                        "description": "Date & time the audience was created - Cannot be modified"
                    },
                    "changeDate": {
                        "$ref": "date-time",
                        "description": "Date & time the audience has been changed - Cannot be modified"
                    },
                    "lastContactAddedAt": {
                        "$ref": "date-time",
                        "description": "Last date & time a contact has been added to the audience - Cannot be modified"
                    },
                    "lastContactRemovedAt": {
                        "$ref": "date-time",
                        "description": "Last date & time a contact has been removed from the audience - Cannot be modified"
                    },
                    "lastSyncDate": {
                        "$ref": "date-time",
                        "description": "Last date & time a contact of the audience has been synced - Cannot be modified"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "externalId - Specified audience reference by external system"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "Audience name"
                    }
                }
            },
            "CreateAudienceRequest": {
                "id": "CreateAudienceRequest",
                "required": [
                    "externalId",
                    "name"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "externalId - Specified audience reference by external system"
                    },
                    "name": {
                        "type": "string",
                        "description": "Audience name"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/automation",
        "apis": [
            {
                "path": "/automation/trigger/{triggerCode}",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Trigger an automation for a specific contact",
                        "notes": "Triggers an automation for a given contact.",
                        "type": "void",
                        "nickname": "triggerAutomation",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "triggerCode",
                                "required": true,
                                "type": "string",
                                "format": "uuid",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "AutomationTriggerRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 200,
                                "message": "At least one Automation was triggered successfully",
                                "responseModel": "ExternalTriggerValidationResult"
                            },
                            {
                                "code": 404,
                                "message": "Trigger not found",
                                "responseModel": "ExternalTriggerValidationResult"
                            },
                            {
                                "code": 404,
                                "message": "Contact not found",
                                "responseModel": "ExternalTriggerValidationResult"
                            },
                            {
                                "code": 417,
                                "message": "No automation has been triggered (see included automationResults)",
                                "responseModel": "ExternalTriggerValidationResult"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "ExternalTriggerValidationResult": {
                "id": "ExternalTriggerValidationResult",
                "required": [
                    "result"
                ],
                "properties": {
                    "result": {
                        "$ref": "ExternalTriggerResponse",
                        "enum": [
                            "OK",
                            "UNKNOWN",
                            "TRIGGER_NOTFOUND",
                            "CONTACT_NOTFOUND",
                            "NOT_TRIGGERED"
                        ]
                    },
                    "automationResults": {
                        "type": "array",
                        "items": {
                            "$ref": "AutomationTriggerValidationResult"
                        }
                    }
                }
            },
            "AutomationTriggerValidationResult": {
                "id": "AutomationTriggerValidationResult",
                "required": [
                    "automationId",
                    "result"
                ],
                "properties": {
                    "automationId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID"
                    },
                    "result": {
                        "$ref": "AutomationTriggerValidationResponse",
                        "enum": [
                            "OK",
                            "AUTOMATION_INACTIVE",
                            "PARTICIPATION_LIMIT_REACHED"
                        ]
                    }
                }
            },
            "AutomationTriggerRequest": {
                "id": "AutomationTriggerRequest",
                "required": [
                    "externalContactId"
                ],
                "properties": {
                    "externalContactId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    }
                }
            },
            "UUID": {
                "id": "UUID",
                "properties": {
                    "leastSignificantBits": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "mostSignificantBits": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/templist",
        "apis": [
            {
                "path": "/templist",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add a temporary list",
                        "notes": "Adds a set of existing contacts as a temporary list to MailPlus, based on external contact id's.",
                        "type": "void",
                        "nickname": "createTemporaryList",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "CreateTemporaryListRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Templist created successfully"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Temporary list with specified externalTemporaryListId already exists</li><li>Temporary list with specified name already exists</li><li>Too many temporary lists</li><li>No templist created, one or more contacts could not be found</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "GET",
                        "summary": "Get all temporary lists",
                        "notes": "Returns a list of all available temporary lists.",
                        "type": "array",
                        "items": {
                            "$ref": "TemporaryList"
                        },
                        "nickname": "getTemporaryLists",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": []
                    }
                ]
            },
            {
                "path": "/templist/{externalTemporaryListId}",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add contacts to a temporary list",
                        "notes": "Adds a set of existing contacts to a given temporary list, based on external contact id's. An externalTemporaryListId can be retrieved by using the GET method /templist.",
                        "type": "void",
                        "nickname": "addContactsToTemporaryList",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalTemporaryListId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "AddContactsToTemporaryListRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Contacts successfully added to the templist"
                            },
                            {
                                "code": 404,
                                "message": "Templist not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "One or more contacts could not be found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "DELETE",
                        "summary": "Delete a temporary list",
                        "notes": "Deletes a temporary list. An externalTemporaryListId can be retrieved by using the GET method /templist.",
                        "type": "void",
                        "nickname": "deleteTemporaryList",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalTemporaryListId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Templist removed successfully"
                            },
                            {
                                "code": 404,
                                "message": "Templist not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Temporary list in use",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "TemporaryList": {
                "id": "TemporaryList",
                "required": [
                    "name",
                    "createdAt",
                    "type"
                ],
                "properties": {
                    "externalTemporaryListId": {
                        "type": "string",
                        "description": "Specified list reference by external system"
                    },
                    "name": {
                        "type": "string",
                        "description": "Temporary list name visible in MailPlus"
                    },
                    "createdAt": {
                        "$ref": "date-time",
                        "description": "Date & time the temporary list was created"
                    },
                    "type": {
                        "type": "string",
                        "description": "Default value: API - Cannot be modified",
                        "enum": [
                            "IMPORT",
                            "RESPONSE",
                            "API",
                            "SPLIT"
                        ]
                    }
                }
            },
            "CreateTemporaryListRequest": {
                "id": "CreateTemporaryListRequest",
                "required": [
                    "externalTemporaryListId",
                    "name"
                ],
                "properties": {
                    "externalTemporaryListId": {
                        "type": "string",
                        "description": "Specified list reference by external system"
                    },
                    "name": {
                        "type": "string",
                        "description": "Temporary list name visible in MailPlus"
                    },
                    "contacts": {
                        "type": "array",
                        "description": "List of externalContactId's",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AddContactsToTemporaryListRequest": {
                "id": "AddContactsToTemporaryListRequest",
                "required": [
                    "contacts"
                ],
                "properties": {
                    "contacts": {
                        "type": "array",
                        "description": "List of externalContactId's",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/product",
        "apis": [
            {
                "path": "/product/custom-properties/list",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get available custom product properties",
                        "notes": "Returns a list of available custom properties that can be part of a product.",
                        "type": "array",
                        "items": {
                            "$ref": "ProductPropertyDefinition"
                        },
                        "nickname": "getAvailableProperties",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": []
                    }
                ]
            },
            {
                "path": "/product",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add a product",
                        "notes": "Adds a product to MailPlus.",
                        "type": "void",
                        "nickname": "insertProduct",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "ProductRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Product created successfully"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>externalId must be unique</li><li>price cannot be null</li><li>product cannot be null</li><li>image url cannot be null or empty</li><li>link cannot be null or empty</li><li>externalId cannot be null or empty</li><li>name cannot be null or empty</li><li>invalid custom property</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/product/{externalProductId}",
                "operations": [
                    {
                        "method": "PUT",
                        "summary": "Update a product",
                        "notes": "Updates an existing given product.",
                        "type": "void",
                        "nickname": "updateProduct",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalProductId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "body",
                                "required": true,
                                "type": "ProductRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Product updated successfully"
                            },
                            {
                                "code": 404,
                                "message": "Product not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>externalId must be unique</li><li>price cannot be null</li><li>product cannot be null</li><li>image url cannot be null or empty</li><li>link cannot be null or empty</li><li>externalId cannot be null or empty</li><li>name cannot be null or empty</li><li>invalid custom property</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "DELETE",
                        "summary": "Delete a product",
                        "notes": "Deletes an existing given product.",
                        "type": "void",
                        "nickname": "deleteProduct",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalProductId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Product deleted successfully"
                            },
                            {
                                "code": 404,
                                "message": "Product not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "GET",
                        "summary": "Get a product",
                        "notes": "Returns a given product.",
                        "type": "Product",
                        "nickname": "getProduct",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalProductId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Product not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/product/search",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Search products",
                        "notes": "Finds matching products based on the given search parameters.",
                        "type": "array",
                        "items": {
                            "$ref": "Product"
                        },
                        "nickname": "searchProducts",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "MPSearchQuery",
                                "required": true,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ProductPropertyDefinition": {
                "id": "ProductPropertyDefinition",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the custom product property (is unique)"
                    }
                }
            },
            "ProductSpecification": {
                "id": "ProductSpecification",
                "required": [
                    "description",
                    "value"
                ],
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "rank": {
                        "type": "string"
                    }
                }
            },
            "ProductRequest": {
                "id": "ProductRequest",
                "required": [
                    "product"
                ],
                "properties": {
                    "update": {
                        "type": "boolean",
                        "description": "Only existing products can be updated - Default value: false"
                    },
                    "product": {
                        "$ref": "Product"
                    }
                }
            },
            "Product": {
                "id": "Product",
                "required": [
                    "externalId",
                    "name",
                    "link",
                    "price",
                    "imageUrl",
                    "imageLargeUrl"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "externalProductId - Specified product reference by external system"
                    },
                    "name": {
                        "type": "string",
                        "description": "Product name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Product description"
                    },
                    "link": {
                        "type": "string",
                        "description": "Link to the product page"
                    },
                    "price": {
                        "type": "string"
                    },
                    "oldPrice": {
                        "type": "string",
                        "description": "Only used for discounted products"
                    },
                    "imageUrl": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "description": "Product category"
                    },
                    "gtin": {
                        "type": "string"
                    },
                    "sku": {
                        "type": "string"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Product brand"
                    },
                    "ratingImageUrl": {
                        "type": "string"
                    },
                    "reviewLink": {
                        "type": "string",
                        "description": "Link to the review page"
                    },
                    "creationDate": {
                        "$ref": "date-time",
                        "description": "Date & time the product was created  - Cannot be modified"
                    },
                    "changeDate": {
                        "$ref": "date-time",
                        "description": "Date & time the product has been changed - Cannot be modified"
                    },
                    "addToCartLink": {
                        "type": "string"
                    },
                    "imageLargeUrl": {
                        "type": "string"
                    },
                    "ratingValue": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "stock": {
                        "type": "string",
                        "description": "Default value: UNKNOWN",
                        "enum": [
                            "LIMITED",
                            "GOOD",
                            "UNKNOWN"
                        ]
                    },
                    "deleted": {
                        "type": "boolean",
                        "description": "Indicates whether a product is deleted - Default value: false"
                    },
                    "visible": {
                        "type": "boolean",
                        "description": "Defines whether the product is visible in MailPlus - Default value: true"
                    },
                    "customProperties": {
                        "$ref": "Map[string,Object]",
                        "description": "Available properties can be retrieved by /product/custom-properties/list, value cannot be null and is max 255 chars"
                    },
                    "specifications": {
                        "type": "array",
                        "items": {
                            "$ref": "ProductSpecification"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/subscription",
        "apis": [
            {
                "path": "/subscription/subscribe",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Subscribe a contact",
                        "notes": "Adds a contact to Mailplus. A unique identifier \"externalId\" is NOT required. Available properties can be retrieved by using the GET methode /contact/properties/list.",
                        "type": "void",
                        "nickname": "subscribeContact",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "Contact",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Subscription added successfully"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Email is invalid</li><li>Property is invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "Channel": {
                "id": "Channel",
                "description": "",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    "value": {
                        "type": "boolean"
                    }
                }
            },
            "Contact": {
                "id": "Contact",
                "description": "",
                "required": [
                    "externalId"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    },
                    "created": {
                        "$ref": "date-time",
                        "description": "Date & time the contact was created - Cannot be modified"
                    },
                    "encryptedId": {
                        "type": "string",
                        "description": "Contact reference generated by MailPlus - Cannot be modified"
                    },
                    "testGroup": {
                        "type": "boolean",
                        "description": "Defines whether the contact is added to the test group"
                    },
                    "lastChanged": {
                        "$ref": "date-time",
                        "description": "Date & time the contact has been changed - Cannot be modified"
                    },
                    "temporary": {
                        "type": "boolean",
                        "description": "Indication whether the contact is temporary - Cannot be modified"
                    },
                    "properties": {
                        "$ref": "Map[string,Object]",
                        "description": "Available properties can be retrieved by /contact/properties/list"
                    },
                    "channels": {
                        "type": "array",
                        "description": "All available channels for this contact - Cannot be modified",
                        "items": {
                            "$ref": "Channel"
                        }
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/mailing",
        "apis": [
            {
                "path": "/mailing",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get sent mailings in period",
                        "notes": "Returns a list of all mailings, including a link to the archived online version of the sent mailing.",
                        "type": "array",
                        "items": {
                            "$ref": "Mailing"
                        },
                        "nickname": "getMailings",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": true,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": true,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid fromDate or no fromDate given</li><li>Invalid toDate or no toDate given</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/recipients",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get recipients for mailing",
                        "notes": "Returns contacts to which the mailing has been sent.",
                        "type": "MailingRecipientResponse",
                        "nickname": "getMailedContacts",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/opens",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get opens for mailing",
                        "notes": "Returns contacts who opened a given mailing.",
                        "type": "MailingOpenResponse",
                        "nickname": "getMailingOpensResponse",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/opens/{externalId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get opens of a mailing for a contact",
                        "notes": "Returns open interations for a given contact in a specified mailing.",
                        "type": "MailingContactOpenResponse",
                        "nickname": "getMailingContactOpensResponse",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid param: Contact not found</li><li>Invalid param: Mailing type invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/bounces",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get bounces for mailing",
                        "notes": "Returns bounced contacts.",
                        "type": "MailingBounceResponse",
                        "nickname": "getMailingBounceResponse",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/clicks",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get clicks for mailing",
                        "notes": "Returns contacts who clicked a link in a given mailing. Link details can be retrieved by using the GET method /mailing/{encryptedMailingId}.",
                        "type": "MailingClickResponse",
                        "nickname": "getMailingClickResponse",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/clicks/{externalId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get clicks of a mailing for a contact",
                        "notes": "Returns click interactions for a given contact in a specified mailing. Link details can be retrieved by using the GET method /mailing/{encryptedMailingId}.",
                        "type": "MailingContactClickResponse",
                        "nickname": "getMailingContactClicksResponse",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid param: Contact not found</li><li>Invalid param: Mailing type invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get mailing data",
                        "notes": "Returns the details of a given mailing, including details of the used links.",
                        "type": "MailingDetails",
                        "nickname": "getMailingDetails",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/mailing/{encryptedMailingId}/statistics",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get mailing statistics",
                        "notes": "Returns a summary of the results for a sent mailing, such as the opens, clicks, bounces, etc.",
                        "type": "MailingStats",
                        "nickname": "getMailingStats",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "encryptedMailingId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given mailing not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "Mailing type invalid",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "MailingBounce": {
                "id": "MailingBounce",
                "required": [
                    "contactIdentifier",
                    "bounceDate",
                    "type"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    },
                    "bounceDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the bounce occured"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "HARDBOUNCE",
                            "SOFTBOUNCE"
                        ]
                    }
                }
            },
            "MailingContactOpenResponse": {
                "id": "MailingContactOpenResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "opens": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingContactOpen"
                        }
                    }
                }
            },
            "MailingContactClickResponse": {
                "id": "MailingContactClickResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "clicks": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingContactClick"
                        }
                    }
                }
            },
            "MailingClick": {
                "id": "MailingClick",
                "required": [
                    "contactIdentifier",
                    "clickDate",
                    "linkId"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    },
                    "clickDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the click occurred"
                    },
                    "linkId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MailingRecipientResponse": {
                "id": "MailingRecipientResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingRecipient"
                        }
                    }
                }
            },
            "MailingLink": {
                "id": "MailingLink",
                "required": [
                    "id",
                    "name",
                    "url"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "linkId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specified link name in MailPlus"
                    },
                    "url": {
                        "type": "string",
                        "description": "Link URL"
                    },
                    "code": {
                        "type": "string",
                        "description": "Specified link code in MailPlus"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "twitter",
                            "facebook",
                            "whatsapp",
                            "linkedin",
                            "openhtml",
                            "opentext",
                            "openpdf",
                            "openpdftext",
                            "unsubscribe",
                            "editprofile",
                            "webshop",
                            "conversion"
                        ]
                    }
                }
            },
            "MailingClickResponse": {
                "id": "MailingClickResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "clicks": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingClick"
                        }
                    }
                }
            },
            "ContactIdentifier": {
                "id": "ContactIdentifier",
                "required": [
                    "encryptedId"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    },
                    "encryptedId": {
                        "type": "string",
                        "description": "Contact reference generated by MailPlus"
                    }
                }
            },
            "MailingDetails": {
                "id": "MailingDetails",
                "required": [
                    "encryptedId",
                    "name",
                    "scheduledStartDate",
                    "type",
                    "sentCount",
                    "sender",
                    "targetGroup",
                    "message"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/mailing/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Mailing name"
                    },
                    "scheduledStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the mailing was scheduled to send"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    "archiveLink": {
                        "type": "string",
                        "description": "Link to an online version of the mailing"
                    },
                    "sentCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of mailings sent"
                    },
                    "sender": {
                        "type": "string",
                        "description": "Sender name"
                    },
                    "targetGroup": {
                        "type": "string",
                        "description": "Target group name"
                    },
                    "message": {
                        "$ref": "Message"
                    },
                    "links": {
                        "type": "array",
                        "description": "trackable links of the mailing",
                        "items": {
                            "$ref": "MailingLink"
                        }
                    }
                }
            },
            "MailingContactOpen": {
                "id": "MailingContactOpen",
                "required": [
                    "openDate"
                ],
                "properties": {
                    "openDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the open occurred"
                    }
                }
            },
            "Mailing": {
                "id": "Mailing",
                "required": [
                    "encryptedId",
                    "name",
                    "scheduledStartDate",
                    "type",
                    "sentCount"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/mailing/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Mailing name"
                    },
                    "scheduledStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the mailing was scheduled to send"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    "archiveLink": {
                        "type": "string",
                        "description": "Link to an online version of the mailing"
                    },
                    "sentCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of mailings sent"
                    }
                }
            },
            "Paging": {
                "id": "Paging",
                "properties": {
                    "next": {
                        "type": "string"
                    },
                    "after": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "MailingOpen": {
                "id": "MailingOpen",
                "required": [
                    "contactIdentifier",
                    "openDate"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    },
                    "openDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the open occurred"
                    }
                }
            },
            "ISODateParam": {
                "id": "ISODateParam",
                "properties": {
                    "date": {
                        "$ref": "date-time",
                        "description": "dateFormat: ISO 8601"
                    }
                }
            },
            "MailingStats": {
                "id": "MailingStats",
                "required": [
                    "sentCount",
                    "acceptedCount",
                    "openCount",
                    "openRenderedCount",
                    "clickCount",
                    "hardbounceCount",
                    "softbounceCount",
                    "notRetainedAfterBounceCount",
                    "conversionClickCount",
                    "unsubscribeCount"
                ],
                "properties": {
                    "sentCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of recipients"
                    },
                    "acceptedCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Accepted = Sent - hard bounce - soft bounce"
                    },
                    "openCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique opens"
                    },
                    "openRenderedCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique rendered opens (images downloaded)"
                    },
                    "clickCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique clicks"
                    },
                    "hardbounceCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of hard bounces"
                    },
                    "softbounceCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of soft bounces"
                    },
                    "notRetainedAfterBounceCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Hard bounces + 4x soft bounced in a row"
                    },
                    "conversionClickCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique clicks on links marked as 'conversion'"
                    },
                    "unsubscribeCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of unsubscribed contacts"
                    },
                    "toWebshopCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique clicks to webshop (eCom only)"
                    },
                    "shoppingcartCreatedCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique created shopping carts (eCom only)"
                    },
                    "shoppingcartConvertedCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Unique converted shopping carts (eCom only)"
                    },
                    "conversionValue": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Total conversion value in cents (eCom only)"
                    }
                }
            },
            "Message": {
                "id": "Message",
                "required": [
                    "name",
                    "author",
                    "fromName"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Message name"
                    },
                    "author": {
                        "type": "string",
                        "description": "Message author"
                    },
                    "subject": {
                        "type": "string"
                    },
                    "fromName": {
                        "type": "string"
                    },
                    "fromEmail": {
                        "type": "string"
                    }
                }
            },
            "MailingContactClick": {
                "id": "MailingContactClick",
                "required": [
                    "clickDate",
                    "linkId"
                ],
                "properties": {
                    "clickDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the click occurred"
                    },
                    "linkId": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "MailingBounceResponse": {
                "id": "MailingBounceResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "bounces": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingBounce"
                        }
                    }
                }
            },
            "MailingRecipient": {
                "id": "MailingRecipient",
                "required": [
                    "contactIdentifier"
                ],
                "properties": {
                    "contactIdentifier": {
                        "$ref": "ContactIdentifier"
                    }
                }
            },
            "MailingOpenResponse": {
                "id": "MailingOpenResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "opens": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingOpen"
                        }
                    }
                }
            }
        }
    },
    {
        "apiVersion": "1.0.0",
        "swaggerVersion": "1.2",
        "basePath": "https://restapi.mailplus.nl/integrationservice",
        "resourcePath": "/contact",
        "apis": [
            {
                "path": "/contact/properties/list",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get all properties",
                        "notes": "Returns a list of available properties that are part of a contact object.",
                        "type": "array",
                        "items": {
                            "$ref": "Property"
                        },
                        "nickname": "getAvailableProperties",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": []
                    }
                ]
            },
            {
                "path": "/contact/{externalId}",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get a contact",
                        "notes": "Returns a given contact, including a list of all properties. Properties will only be shown if data is available.",
                        "type": "Contact",
                        "nickname": "getContact",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given contact not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    },
                    {
                        "method": "PUT",
                        "summary": "Update a contact",
                        "notes": "Modifies a existing given contact.",
                        "type": "void",
                        "nickname": "updateContact",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "ContactRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            },
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Contact added successfully"
                            },
                            {
                                "code": 404,
                                "message": "Given contact not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Email is invalid</li><li>Property is invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/list",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add multiple contacts",
                        "notes": "Returns a list with response codes per contact.",
                        "type": "array",
                        "items": {
                            "$ref": "AddContactResponse"
                        },
                        "nickname": "insertContacts",
                        "produces": [
                            "application/json"
                        ],
                        "consumes": [
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "AddContactsRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 400,
                                "message": "<ul><li>Too many contacts provided (max is 100)</li><li>Contact without externalId found</li></ul>"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact",
                "operations": [
                    {
                        "method": "POST",
                        "summary": "Add a contact",
                        "notes": "Adds a contact to Mailplus. A unique identifier \"externalId\" is required for each contact. Available properties can be retrieved by using the GET methode /contact/properties/list.",
                        "type": "void",
                        "nickname": "insertContact",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "body",
                                "required": true,
                                "type": "ContactRequest",
                                "paramType": "body",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Contact added successfully"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Email is invalid</li><li>Property is invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/anonymize/{externalId}",
                "operations": [
                    {
                        "method": "PUT",
                        "summary": "Anonymize a contact",
                        "notes": "Anonymizes a existing given contact.",
                        "type": "void",
                        "nickname": "anonymizeContact",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 204,
                                "message": "Contact anonymized successfully"
                            },
                            {
                                "code": 404,
                                "message": "Given contact not found",
                                "responseModel": "ErrorResponse"
                            },
                            {
                                "code": 400,
                                "message": "<ul><li>Property is invalid</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/updates/list",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get updated contacts",
                        "notes": "Returns contacts which have been updated within a specific period of time.",
                        "type": "ContactsResponse",
                        "nickname": "getUpdatedContactsJson",
                        "produces": [
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": true,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": true,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid fromDate or no fromDate given</li><li>Invalid toDate or no toDate given</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/bounces/list",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get bounced contacts",
                        "notes": "Returns bounced contacts within a specific period of time.",
                        "type": "BouncesResponse",
                        "nickname": "getBouncedContactsJson",
                        "produces": [
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "fromDate",
                                "required": true,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "toDate",
                                "required": true,
                                "type": "ISODateParam",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 400,
                                "message": "<ul><li>Invalid fromDate or no fromDate given</li><li>Invalid toDate or no toDate given</li></ul>",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/{externalId}/mailings",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get mailing history for a contact",
                        "notes": "Returns received mailings for a given contact. Default pagesize is 50 (Cannot be modified).",
                        "type": "MailingHistoryResponse",
                        "nickname": "getMailingHistory",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given contact not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/{externalId}/campaign-mailings",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get campaign mailing history for a contact",
                        "notes": "Returns received campaign mailings for a given contact. Default pagesize is 50 (Cannot be modified).",
                        "type": "CampaignMailingHistoryResponse",
                        "nickname": "getCampaignMailingHistory",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given contact not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/{externalId}/forms",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get form history for a contact",
                        "notes": "Returns submitted forms for a given contact.",
                        "type": "FormHistoryResponse",
                        "nickname": "getFormHistory",
                        "produces": [
                            "application/xml",
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "externalId",
                                "required": true,
                                "type": "string",
                                "paramType": "path",
                                "allowMultiple": false
                            },
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ],
                        "responseMessages": [
                            {
                                "code": 404,
                                "message": "Given contact not found",
                                "responseModel": "ErrorResponse"
                            }
                        ]
                    }
                ]
            },
            {
                "path": "/contact/search",
                "operations": [
                    {
                        "method": "GET",
                        "summary": "Get contacts by properties",
                        "notes": "Returns a contact based on a given property value. Available properties can be retrieved by using the GET methode /contact/properties/list.",
                        "type": "ContactsResponse",
                        "nickname": "searchContactsJson",
                        "produces": [
                            "application/json"
                        ],
                        "consumes": [
                            "application/xml",
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "after",
                                "required": false,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "pageSize",
                                "required": true,
                                "type": "integer",
                                "format": "int32",
                                "paramType": "query",
                                "allowMultiple": false
                            },
                            {
                                "name": "MPSearchQuery",
                                "required": true,
                                "type": "string",
                                "paramType": "query",
                                "allowMultiple": false
                            }
                        ]
                    }
                ]
            }
        ],
        "models": {
            "ContactsResponse": {
                "id": "ContactsResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "Contact"
                        }
                    }
                }
            },
            "SetPropertyEntry": {
                "id": "SetPropertyEntry",
                "required": [
                    "bit",
                    "description",
                    "rank"
                ],
                "properties": {
                    "bit": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of an option"
                    },
                    "rank": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "AddContactsRequest": {
                "id": "AddContactsRequest",
                "required": [
                    "contacts"
                ],
                "properties": {
                    "update": {
                        "type": "boolean",
                        "description": "Only existing contacts can be updated - Default value: false"
                    },
                    "purge": {
                        "type": "boolean",
                        "description": "Existing properties will be purged if not set - Default value: false"
                    },
                    "contacts": {
                        "type": "array",
                        "items": {
                            "$ref": "Contact"
                        }
                    }
                }
            },
            "Channel": {
                "id": "Channel",
                "description": "",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    "value": {
                        "type": "boolean"
                    }
                }
            },
            "AddContactResponse": {
                "id": "AddContactResponse",
                "properties": {
                    "externalId": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "ContactResponseCode",
                        "enum": [
                            "OK",
                            "PROPERTY_INVALID",
                            "CONTACT_ALREADY_EXISTS",
                            "CONTACT_UNKNOWN",
                            "CONTACT_OPTOUT",
                            "NO_ACTIVE_CHANNEL",
                            "ERROR"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CampaignMailingHistoryResponse": {
                "id": "CampaignMailingHistoryResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "campaignMailingHistories": {
                        "type": "array",
                        "items": {
                            "$ref": "CampaignMailingHistory"
                        }
                    }
                }
            },
            "Form": {
                "id": "Form",
                "required": [
                    "id",
                    "name",
                    "formSubType",
                    "formState"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "formId (Use '/form/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Form name"
                    },
                    "formSubType": {
                        "type": "string",
                        "enum": [
                            "normal",
                            "subscribe",
                            "unSubscribe",
                            "editProfile"
                        ]
                    },
                    "formState": {
                        "type": "string",
                        "enum": [
                            "draft",
                            "proof",
                            "final"
                        ]
                    }
                }
            },
            "FormHistory": {
                "id": "FormHistory",
                "required": [
                    "form",
                    "formResultId",
                    "submitDate",
                    "completed"
                ],
                "properties": {
                    "form": {
                        "$ref": "Form"
                    },
                    "formResultId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "(Use '/form/result*' to request additional data)"
                    },
                    "submitDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the form was submitted"
                    },
                    "completed": {
                        "type": "boolean"
                    }
                }
            },
            "Contact": {
                "id": "Contact",
                "description": "",
                "required": [
                    "externalId"
                ],
                "properties": {
                    "externalId": {
                        "type": "string",
                        "description": "Specified contact reference by external system"
                    },
                    "created": {
                        "$ref": "date-time",
                        "description": "Date & time the contact was created - Cannot be modified"
                    },
                    "encryptedId": {
                        "type": "string",
                        "description": "Contact reference generated by MailPlus - Cannot be modified"
                    },
                    "testGroup": {
                        "type": "boolean",
                        "description": "Defines whether the contact is added to the test group"
                    },
                    "lastChanged": {
                        "$ref": "date-time",
                        "description": "Date & time the contact has been changed - Cannot be modified"
                    },
                    "temporary": {
                        "type": "boolean",
                        "description": "Indication whether the contact is temporary - Cannot be modified"
                    },
                    "properties": {
                        "$ref": "Map[string,Object]",
                        "description": "Available properties can be retrieved by /contact/properties/list"
                    },
                    "channels": {
                        "type": "array",
                        "description": "All available channels for this contact - Cannot be modified",
                        "items": {
                            "$ref": "Channel"
                        }
                    }
                }
            },
            "FormHistoryResponse": {
                "id": "FormHistoryResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "formHistories": {
                        "type": "array",
                        "items": {
                            "$ref": "FormHistory"
                        }
                    }
                }
            },
            "ContactRequest": {
                "id": "ContactRequest",
                "required": [
                    "contact"
                ],
                "properties": {
                    "update": {
                        "type": "boolean",
                        "description": "Only existing contacts can be updated - Default value: false"
                    },
                    "purge": {
                        "type": "boolean",
                        "description": "Existing properties will be purged if not set - Default value: false"
                    },
                    "contact": {
                        "$ref": "Contact"
                    }
                }
            },
            "BouncesResponse": {
                "id": "BouncesResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "bounces": {
                        "type": "array",
                        "items": {
                            "$ref": "ContactBounce"
                        }
                    }
                }
            },
            "CampaignMailingHistory": {
                "id": "CampaignMailingHistory",
                "required": [
                    "campaignMailing",
                    "campaignSubscriptionId",
                    "sentDate",
                    "opened",
                    "clicked"
                ],
                "properties": {
                    "campaignMailing": {
                        "$ref": "CampaignMailing"
                    },
                    "campaignSubscriptionId": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sentDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the campaign mailing was sent"
                    },
                    "opened": {
                        "type": "boolean"
                    },
                    "clicked": {
                        "type": "boolean"
                    },
                    "bounce": {
                        "type": "string",
                        "enum": [
                            "HARDBOUNCE",
                            "SOFTBOUNCE"
                        ]
                    }
                }
            },
            "Mailing": {
                "id": "Mailing",
                "required": [
                    "encryptedId",
                    "name",
                    "scheduledStartDate",
                    "type",
                    "sentCount"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/mailing/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Mailing name"
                    },
                    "scheduledStartDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the mailing was scheduled to send"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    },
                    "archiveLink": {
                        "type": "string",
                        "description": "Link to an online version of the mailing"
                    },
                    "sentCount": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of mailings sent"
                    }
                }
            },
            "Paging": {
                "id": "Paging",
                "properties": {
                    "next": {
                        "type": "string"
                    },
                    "after": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ErrorResponse": {
                "id": "ErrorResponse",
                "required": [
                    "errorType",
                    "message"
                ],
                "properties": {
                    "errorType": {
                        "$ref": "ErrorType",
                        "enum": [
                            "INVALID_PARAMS",
                            "INVALID_STATE",
                            "NAME_ALREADY_IN_USE",
                            "ID_NOTUNIQUE",
                            "PRODUCT_NOTFOUND",
                            "AUTH_NOT_FOUND",
                            "NOT_AUTHORIZED",
                            "FORM_NOT_FOUND",
                            "CONTACT_NOT_FOUND",
                            "CONTACT_OPTOUT",
                            "CONTACT_ALREADY_EXISTS",
                            "INVALID_PROPERTY",
                            "BACKEND_EXCEPTION",
                            "RESOURCE_NOT_FOUND",
                            "TRIGGER_NOTFOUND",
                            "CAMPAIGN_NOTFOUND",
                            "ORDER_NOTFOUND",
                            "MAILING_NOTFOUND",
                            "INVALID_MAILING",
                            "FORMRESULT_NOT_FOUND"
                        ]
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "CampaignMailing": {
                "id": "CampaignMailing",
                "required": [
                    "encryptedId",
                    "name",
                    "type"
                ],
                "properties": {
                    "encryptedId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/campaign-mailing/*' to request additional data)"
                    },
                    "name": {
                        "type": "string",
                        "description": "Campaign mailing name"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "EMAIL",
                            "SMS"
                        ]
                    }
                }
            },
            "ISODateParam": {
                "id": "ISODateParam",
                "properties": {
                    "date": {
                        "$ref": "date-time",
                        "description": "dateFormat: ISO 8601"
                    }
                }
            },
            "ContactBounce": {
                "id": "ContactBounce",
                "description": "",
                "required": [
                    "date",
                    "type",
                    "contact"
                ],
                "properties": {
                    "date": {
                        "$ref": "date-time",
                        "description": "Date & time the bounce occurred"
                    },
                    "type": {
                        "$ref": "Type",
                        "enum": [
                            "HARDBOUNCE",
                            "SOFTBOUNCE"
                        ]
                    },
                    "contact": {
                        "$ref": "Contact"
                    },
                    "encryptedActId": {
                        "type": "string",
                        "description": "encryptedMailingId (Use '/mailing/*' to request additional data)"
                    }
                }
            },
            "MailingHistory": {
                "id": "MailingHistory",
                "required": [
                    "mailing",
                    "sentDate",
                    "opened",
                    "clicked"
                ],
                "properties": {
                    "mailing": {
                        "$ref": "Mailing"
                    },
                    "sentDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "dateFormat: ISO 8601 - Date & time the mailing was sent"
                    },
                    "opened": {
                        "type": "boolean"
                    },
                    "clicked": {
                        "type": "boolean"
                    },
                    "bounce": {
                        "type": "string",
                        "enum": [
                            "HARDBOUNCE",
                            "SOFTBOUNCE"
                        ]
                    }
                }
            },
            "MailingHistoryResponse": {
                "id": "MailingHistoryResponse",
                "properties": {
                    "paging": {
                        "$ref": "Paging"
                    },
                    "mailingHistories": {
                        "type": "array",
                        "items": {
                            "$ref": "MailingHistory"
                        }
                    }
                }
            },
            "Property": {
                "id": "Property",
                "required": [
                    "name",
                    "description",
                    "type"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the property"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description label of the property"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "birthdate",
                            "date",
                            "dateTime",
                            "email",
                            "gender",
                            "int",
                            "mobNr",
                            "money",
                            "postcode",
                            "set",
                            "string"
                        ]
                    },
                    "entries": {
                        "type": "array",
                        "description": "Only visible for 'SET' type. Defines the options and corresponding bit values",
                        "items": {
                            "$ref": "SetPropertyEntry"
                        }
                    }
                }
            }
        }
    }
]